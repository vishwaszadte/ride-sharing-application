<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Ride-Sharing Application</title>

    <style>
      /* Overall styling */
      body {
        margin: 0;
        padding: 0;
        font-family: Arial, sans-serif;
      }

      /* Navbar styling */
      .riderHomeNavbar {
        background-color: #333;
        color: #fff;
        display: flex;
        justify-content: flex-end;
        padding: 10px;
      }

      .riderProfileBtn {
        background-color: transparent;
        border: none;
        color: #fff;
        cursor: pointer;
        font-size: 16px;
        margin-right: auto;
        text-transform: uppercase;
      }

      /* Driver card styling */
      .driversContainer {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
        grid-gap: 20px;
        margin-top: 20px;
      }

      .driverCard {
        background-color: #fff;
        border-radius: 4px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
        display: flex;
        flex-direction: column;
        height: 100%;
        overflow: hidden;
        position: relative;
      }

      .driverCard h2 {
        font-size: 28px;
        font-weight: bold;
        margin-bottom: 10px;
        text-align: center;
      }

      .driverCard h3 {
        font-size: 16px;
        font-weight: 500;
        margin-bottom: 10px;
        text-align: center;
      }

      .driverDetailsBtn,
      .requestRideBtn {
        background-color: #333;
        border: none;
        border-radius: 4px;
        color: #fff;
        cursor: pointer;
        font-size: 16px;
        font-weight: bold;
        padding: 10px;
        margin: 10px auto 0;
        text-align: center;
        text-transform: uppercase;
        width: 80%;
      }

      .driverDetailsBtn:hover,
      .requestRideBtn:hover {
        background-color: #555;
      }

      .requestRideBtn {
        background-color: #ffc107;
        margin-top: auto;
      }

      .driverImg {
        height: 200px;
        object-fit: cover;
        width: 100%;
      }

      .driverRating {
        background-color: #fff;
        border: 2px solid #ffc107;
        border-radius: 50%;
        color: #ffc107;
        font-size: 14px;
        font-weight: bold;
        height: 30px;
        left: 10px;
        line-height: 30px;
        position: absolute;
        text-align: center;
        top: 10px;
        width: 30px;
        z-index: 2;
      }

      .driverCard::before {
        content: "";
        display: block;
        padding-top: 75%;
      }

      .driverCardOverlay {
        background-color: rgba(0, 0, 0, 0.5);
        bottom: 0;
        left: 0;
        opacity: 0;
        position: absolute;
        right: 0;
        top: 0;
        transition: opacity 0.2s ease-in-out;
      }

      .driverCard:hover .driverCardOverlay {
        opacity: 1;
      }

      .driverCardOverlayText {
        color: #fff;
        font-size: 18px;
        font-weight: bold;
        left: 50%;
        position: absolute;
        text-align: center;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 100%;
        z-index: 10;
      }

      @media only screen and (max-width: 768px) {
        .riderHomeNavbar {
          display: flex;
          justify-content: center;
          margin-bottom: 20px;
        }

        .riderProfileBtn {
          font-size: 14px;
          padding: 10px;
        }

        .driverCard {
          display: block;
          margin-bottom: 20px;
        }

        .driverCard h2 {
          font-size: 18px;
        }

        .driverCard h3 {
          font-size: 16px;
        }

        .driverDetailsBtn,
        .requestRideBtn {
          font-size: 14px;
          padding: 10px;
        }
      }
    </style>
  </head>
  <body>
    <div class="riderHomeContainer">
      <nav class="riderHomeNavbar">
        <button class="riderProfileBtn">Your Profile</button>
      </nav>

      <% if (drivers.length > 0) { %>
      <ul class="driversContainer">
        <% drivers.forEach(function(driver) { %>
        <li class="driverCard">
          <h2><%= driver.name %></h2>
          <h3>Vehicle Type: <%= driver.vehicleType %></h3>
          <form action="/rider/driver-detail/<%= driver._id %>" method="GET">
            <input
              type="submit"
              class="driverDetailsBtn"
              value="More details"
            />
          </form>
          <!-- <button action class="driverDetailsBtn" id="<%= driver._id %>">
            More details
          </button> -->
          <button class="requestRideBtn" id="<%= driver._id %>">
            Request ride
          </button>
        </li>
        <% }) %>
      </ul>
      <% } %>
    </div>
  </body>
  <script>
    const updateRiderLocation = (position) => {
      const lat = position.coords.latitude;
      const lon = position.coords.longitude;

      // Check if we have already updated the location in the past minute
      const lastUpdated = localStorage.getItem("lastUpdated");
      if (lastUpdated && Date.now() - lastUpdated < 60000) {
        // If we have already updated the location, don't do it again
        return;
      }

      // Make API call to update user's location in the database
      fetch("/rider/update-location", {
        method: "POST",
        body: JSON.stringify({
          lat: lat,
          lon: lon,
        }),
        headers: {
          "Content-Type": "application/json",
        },
      })
        .then((response) => {
          if (!response.ok) {
            throw new Error("Network response was not ok");
          }
          return response.json();
        })
        .then((data) => {
          // Update the lastUpdated time in localStorage
          localStorage.setItem("lastUpdated", Date.now());

          console.log(data);

          // Reload the page after the API call completes
          window.location.reload(false);
        })
        .catch((error) => {
          console.error("There was a problem with the API call:", error);
        });
    };

    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(updateRiderLocation);
    } else {
      console.error("Geolocation is not supported by this browser.");
    }
  </script>
</html>
